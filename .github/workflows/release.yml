name: Release

on:
  push:
    tags:
      - "v*.*.*" # 例: v1.0.0

jobs:
  build:
    runs-on: windows-latest
    env:
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

    steps:
      # コードを取得
      - uses: actions/checkout@v3

      # Rust (Tauri backend)
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      # Bun (frontend)
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      # ⚡ Bun のキャッシュ
      - name: Cache Bun dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun/install/cache
          key: bun-${{ runner.os }}-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            bun-${{ runner.os }}-

      # Bun install
      - name: Install dependencies
        run: bun install

      # ⚡ Rust のキャッシュ
      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Cache Cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: cargo-build-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-build-${{ runner.os }}-

      # Tauri build
      - name: Build Tauri App
        run: bun run tauri build

      # Release にアップロード
      - name: Upload to Release
        uses: tauri-apps/tauri-action@v0
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "Release ${{ github.ref_name }}"
          releaseBody: "Windows installer and updater manifest"
          releaseDraft: false
          prerelease: false
